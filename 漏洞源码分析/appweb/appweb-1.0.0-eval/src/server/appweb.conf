#
#   appweb.conf -- Default Configuration for the Embedthis Appweb HTTP Server
#
#   This configuration files supports all handlers: ESP, EJS, CGI and
#   File handler. Disable handlers you do not require.
#
#   The order of configuration directives matters as this file is parsed only
#   once. This is a minimal configuration. See the max.conf for examples of
#   other configuration directives.

#
#   The install.config specifies: Documents, Listen and ListenSecure
#
include install.conf

#
#   Error logging configuration. This is for server errors.
#   This is overridden by appweb command line args.
#
ErrorLog "error.log" size=10MB level=2 backup=5 anew

#
#   Define the request tracing log. This is for client requests and responses
#   including HTTP headers. This is overridden by appweb command line args.
#   There are three formatters: pretty, detail and common
#
#   TraceLog "access.log" level=3 size=10MB backup=5 anew formatter=pretty
#   TraceLog "access.log" level=3 size=10MB backup=5 anew formatter=common format="%h %l %u %t "%r" %>s %b %n"

#
#   The user and group account to run as. The fake name APPWEB will change
#   user/group to the Appweb default user/group if running as root/adminstrator.
#   This is www on MAC, nobody/nogroup on Linux, and administrator on Windows.
#   NOTE: ESP requires write access to the cache directory. if you wish
#   to backup log files, you must have write permission to the log file directory.
#
GroupAccount APPWEB
UserAccount APPWEB

#
#   Set a default character set for use with Content-Type headers
#
#   CharSet utf-8

#
#   SSL/TLS configuration
#
<if SSL_MODULE>
    #
    #   Define your certificate and key here
    #
    #   SSLCertificateFile "certs/server.crt"
    #   SSLCertificateKeyFile "certs/server.key"
    #
    #   Redirect all traffic over HTTPS
    #
    #   Redirect secure

    #
    #   This will force browsers to insist on TLS connections for one year
    #
    #   Header set Strict-Transport-Security max-age=31536000; includeSubDomains
</if>

#
#   Remove default security headers if required
#
#   Header remove X-Frame-Options
#   Header remove X-XSS-Protection
#   Header remove X-Content-Type-Options

#
#   In almost all cases, there is a better choice than CGI which is slower and more difficult to secure.
#   Enable CGI only if you are ready for this challenge.
#   For CGI scripts, such as your Perl scripts, make sure that you have
#   "#!/PerlPath" as the first line. This works on Windows as well.
#   The .bat and .cmd extensions are really only for Windows.
#
<if CGI_MODULE>
#    #
#    #   Only ever run CGI programs from outside the documents directory
#    #
#    <Route ^/cgi-bin/(.*)>
#        AddHandler cgiHandler exe cgi cgi-nph out bat cmd pl py
#        LimitProcesses 10
#
#        #
#        #   Prefix environment variables with CGI_ to prevent clashing with SHELL vars, and
#        #   escape shell special characters in environment variables.
#        #
#        CgiPrefix CGI_
#        CgiEscape on
#
#        Documents "./cgi-bin"
#        SetHandler cgiHandler
#        Target run $1
#        Action application/x-perl /usr/bin/perl
#        Action application/x-python /usr/bin/python
#        Action application/x-lua /usr/bin/lua
#        Action application/x-ruby /usr/bin/ruby
#    </Route>
</if>

#
#   FastCGI scripts
#
<if FAST_MODULE>
    #
    #   To run PHP over FastCGI
    #
    #   Action application/x-php /usr/local/bin/php-cgi
    #   AddHandler fastHandler php
    #   FastConnect 127.0.0.1 launch
</if>

#
#   Proxied applications
#
<if PROXY_MODULE>
    #   <Route ^/proxy/(.*)$>
    #       Reset pipeline
    #       SetHandler proxyHandler
    #       Prefix /proxy
    #       CanonicalName https://example.com
    #       ProxyConnect 127.0.0.1:9999
    #   </Route>
</if>

<if ESP_MODULE>
    # Module loaded by default
    AddHandler espHandler esp
</if>

#
#   The fileHandler catches all other extensions
#
AddHandler fileHandler

#
#   Cache static content in the browser for 1 day
#
Cache client=1day extensions="html,css,gif,jpeg,jpg,png,pdf,ico,js,txt"

#
#   Memory allocation error policy. This defines what Appweb will do if
#   the memory limit defined by LimitMemory is exceeded. Set to "continue",
#   to prune non-critical response cache and session state, but continue running.
#   This make the memory limit a soft limit. Set to "restart" to do a
#   graceful shutdown and then appman will restart appweb. Set to "abort" to
#   abort and dump core.
#
LimitMemory 20MB
MemoryPolicy restart

#
#   Some reasonable limits
#
LimitCache                  128K
LimitCacheItem              16K
LimitChunk                  8K
LimitClients                20
LimitConnections            50
LimitFiles                  0
LimitKeepAlive              200
LimitPacket                 8K
LimitConnectionsPerClient   20
LimitRequestsPerClient      20
LimitRequestBody            64MB
LimitRequestForm            128K
LimitRequestHeader          32K
LimitRequestHeaderLines     64
LimitResponseBody           2GB
LimitSessions               200
LimitUpload                 200MB
LimitUri                    4K

#
#   Each worker can handle many simultaneous requests. Don't set workers more than the numbers of CPU Cores
#   Less is often more effective than more workers.
#
LimitWorkers                4

<if HTTP2>
LimitStreams                50
</if>

#
#   Show errors to the browser. WARNING: this may disclose unwanted information.
#   Do not enable in production releases
#
ShowErrors off

#
#   Don't disclose Server header
#
Stealth on

#
#   Enable of the uploadFilter. Always upload to dedicated directory outside the documents directory.
#   Always process uploaded files in your handler and use AutoDelete to remove uploaded files when processed.
#   Always have the upload filter inside a route
#
<if UPLOAD>
<Route ^/upload/>
    Prefix              /upload
    AddFilter           uploadFilter
    UploadDir           /tmp/uploads
    UploadAutoDelete    on
    RequestTimeout      5mins
    LimitUpload         1GB
</Route>
</if>

#
#   Define Applications
#
#   EspApp apps/demo/esp.json

Include apps/*.conf

# LogRoutes
