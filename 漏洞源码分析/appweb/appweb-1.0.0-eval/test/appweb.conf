#
#   appweb.conf -- Appweb unit testing configuration
#
#   WARNING: Do not use this appweb.conf as a sample for your application. It configures everything big,
#   including: all handlers, filters, caching, limits, hosts and many applications. The result is a very,
#   very large single web server to test everything. Have a look at src/server/appweb.conf and use that
#   as the base for your applications. Or better still, look at samples/typical-server or samples/tiny-server.
#

ErrorLog                error.log level=4
TraceLog                trace.log level=3 formatter=pretty

# TraceLog              trace.log level=3 size=10MB backup=5 anew
# TraceLog              stdout level=3 formatter=common format="%h %l %u %t "%r" %>s %b %n"
# TraceLog              stdout level=3 formatter=common format="{ \"time\":\"%t\", \"remoteIP\":\"%a\", \"host\":\"%V\", \"request\":\"%U\", \"query\":\"%q\", \"method\":\"%m\", \"status\":\"%>s\", \"userAgent\":\"%{User-agent}i\", \"referer\":\"%{Referer}i\" }"
# Trace                 debug=1 error=1 request=2 result=2 headers=3 context=4 packet=5 detail=6 content=10K

Listen                  :4100      # <HTTPv4>
Listen                  :4101
<if IPv6>
# Listen                [::1]:4100          # <HTTPv6>
</if>

Documents               web
CanonicalName           127.0.0.1:4100
CharSet                 utf-8

Cache                   1hour
# Cache                 client=0
# Header set Cache-Control no-cache

ExitTimeout             10secs
RequestParseTimeout     30secs
InactivityTimeout       10secs
RequestTimeout          2min
SessionTimeout          20secs
Stealth                 on

MemoryPolicy            abort

# Large value for extreme unit testing 
LimitMemory             40MB
LimitCache              128K
LimitCacheItem          16K
LimitChunk              8K
LimitClients            40
LimitConnections        40
LimitConnectionsPerClient 40
LimitFiles              0
LimitKeepAlive          2000000
LimitPacket             8K
LimitProcesses          10
LimitRequestsPerClient  100
LimitRequestBody        64MB
LimitRequestForm        512K
LimitRequestHeader      32K
LimitRequestHeaderLines 64
LimitResponseBody       2GB
LimitSessions           200
LimitStreams            20
LimitUri                4K

#
#   Maximum number of worker threads in the Appweb worker pool. Must have at
#   least one. Appweb uses 2 other threads: one for the GC and one to service
#   IO events. Each worker can handle many simultaneous requests. Don't set
#   workers more than the numbers of CPU Cores Less is often more effective
#   than more workers.
#
LimitWorkers            4

#
#   Must be on before any ListenSecure directive (on by default). HTTP/1 is always on.
#
Http2                   off

#
#   If running in Xcode, need much more memory as Xcode injects libraries into the process
#
<if ME_DEBUG>
LimitMemory             200MB
LimitStreams            100
LimitClients            100
</if>

# LimitStreams                2000
# LimitRequestsPerClient      2000
# LimitConnectionsPerClient   2000

# Keep for testing global level uploads

# AddFilter           uploadFilter
# UploadDir           tmp
# UploadAutoDelete    on
# LimitUpload         1GB

#
#   Show errors to the client. WARNING: this setting is insecure, do not use in production.
#
ShowErrors              on

AddHandler              fileHandler html gif jpeg jpg png pdf ico css js txt ""

<if DIR_MODULE>
    Options Indexes
    IndexOrder ascending name
    IndexOptions FancyIndexing FoldersFirst
</if>

<if UPLOAD>
<Route ^/upload/>
    # Prefix            /upload
    AddFilter           uploadFilter
    UploadDir           tmp
    UploadAutoDelete    on
    InactivityTimeout   2mins
    RequestTimeout      5mins
    LimitUpload         4GB
</Route>
</if>

#
#   Enable the action handler for simple URI to "C" bindings. This is used by the web-form Auth mech.
#
<Route ^/action/>
    SetHandler actionHandler
</Route>

#<Route ^/testh/>
#    SetHandler test
#</Route>

<if ESP_MODULE>
    AddHandler espHandler esp
    EspApp prefix="/solo"       config="esp/solo/esp.json"
    EspApp prefix="/session"    config="esp/session/esp.json"
    EspApp prefix="/websockets" config="esp/websockets/esp.json"
    EspApp prefix="/autobahn"   config="esp/autobahn/esp.json"
    EspApp prefix="/chat"       config="esp/chat/esp.json"
    EspApp prefix="/cache"      config="esp/caching/esp.json"

    <Route ^/event>
        SetHandler      espHandler
        Source          esp/event/event.c
        Target          run request
    </Route>
    <Route ^/foreign>
        SetHandler      espHandler
        Source          esp/foreign/foreign.c
        AutoFinalize    false
        Target          run request
    </Route>
    <Route ^/progressive>
        SetHandler      espHandler
        Source          esp/progressive/progressive.c
        AutoFinalize    false
        RequestTimeout  24hr
        Target          run request
    </Route>

    #
    #   If using web sockets, you may need these in your esp.json or route configuration
    #
    #   <Route ^/ws/{controller}/{action}$>
    #       Reset                   pipeline
    #       Prefix                  /ws
    #       Documents               .
    #       AddFilter               webSocketFilter
    #       AddHandler              espHandler
    #       Source                  chat.c
    #       Target                  run $1/$2
    #       RequestTimeout          unlimited
    #       InactivityTimeout       unlimited
    #       WebSocketsProtocol      chat
    #       LimitWebSocketsMessage  40MB
    #       LimitWebSocketsPacket   40MB
    #       LimitRequestBody        unlimited
    #       LimitResponseBody       unlimited
    #   </Route>
</if>

<if CGI_MODULE>
    #
    #   Do not copy this cgi configuration. It is insecure and used only for testing.
    #   Never serve CGI from the documents directory. See src/server/appweb.conf for how to configure CGI.
    #
    AddHandler cgiHandler exe cgi cgi-nph bat cmd pl py php
    CgiPrefix "CGI_"
    CgiEscape off
    ScriptAlias /cgi-bin/ "${HOME}/cgi-bin/" cgiHandler
    ScriptAlias /cgi/ "${DOCUMENTS}/"
    Action application/x-perl /usr/bin/perl
    Action application/x-python /usr/bin/python
    Action application/x-lua /usr/bin/lua
    Action application/x-ruby /usr/bin/ruby
    Action application/x-php /usr/local/bin/php-cgi
</if>

<if FAST_MODULE>
    #
    #   Set a fastCGI program for '.php' requests. If no action, then the URL document is run.
    #
    Action application/x-php ./php.fast

    #
    #   To test /fast/test.php and other documents under web
    #
    <Route ^/fast/(.*)$>
        AddHandler fastHandler php
        Prefix /fast
        Documents web

        #
        #   Dynamically launch php. Use Action mime association to determine program to run.
        #   maxRequests -- number of requests before recycling app (default unlimited)
        #   multiplex -- number of simultaneous requests to issue to a single fast proxy (default 1)
        #   timeout -- Time before pruning inactive proxies (default 5 mins)
        #   min/max -- Number of proxies to start and maintain (default 0/1)
        #   keep -- Use FastCGI keep-alive. i.e. issue subsequent requests on the same socket without reconnecting. (default true)
        #
        FastConnect 127.0.0.1 launch

        #
        #   Optional explicit launch path
        #
        # FastConnect 127.0.0.1:9990 launch=./php.fast keep=true min=0 max=2 maxRequests=unlimited timeout=30secs multiplex=1
        Target run $1
    </Route>

    #
    #   To test /fast-bin/fastProgram and pick free TCP/IP port
    #
    <Route ^/fast-bin/(.*)$>
        AddHandler fastHandler
        Prefix /fast-bin
        Documents fast-bin

        #
        #   Program determined from the target: fast-bin/$1
        #
        FastConnect 127.0.0.1:0 launch keep min=1 max=1 maxRequests=unlimited timeout=5mins multiplex=1

        # FastConnect 127.0.0.1:9990 keep min=1 max=1 maxRequests=unlimited timeout=5mins multiplex=1
        Target run $1
    </Route>
</if>

<if PROXY_MODULE>
    #
    #   For development testing
    #
    <Route ^/dproxy/(.*)$>
        Reset pipeline
        SetHandler proxyHandler
        Prefix /dproxy
        # CanonicalName https://example.com
        ErrorDocument 503 /notFound.esp

        Methods add DELETE PATCH PUT OPTIONS

        ProxyConnect 127.0.0.1:9998 multiplex=unlimited timeout=1min min=0 max=1 maxRequests=unlimited ssl
        # ProxyConnect 127.0.0.1:9999 launch="${BIN_DIR}/appweb --config proxy.conf" multiplex=unlimited timeout=1min

        #
        #   Dynamically launch appweb as a proxy on 9999. Can use multiple proxy apps (max >1) on linux and load balance.
        #   maxRequests -- number of requests before recycling app (default unlimited)
        #   multiplex -- number of simultaneous requests to issue to a single proxy (default 1)
        #   timeout -- Time before pruning inactive proxies (default 5 mins)
        #   min/max -- Number of proxies to start and maintain (default 0/1)
        #   ssl -- Use SSL and ProxyConfig for the backend
        #   http2 -- HTTP/2 with SSL and ProxyConfig for the backend (prototype)
        #
        # ProxyConnect 127.0.0.1:9999 launch="${BIN_DIR}/appweb --config proxy.conf" multiplex=unlimited timeout=1min

        <ProxyConfig>
            # When used with ssl / http2
            SSLVerifyClient       off
            SSLCertificateFile    "../certs/test.crt"
            SSLCertificateKeyFile "../certs/test.key"
            SSLCACertificateFile  "../certs/ca.crt" # For client-cert verification (signed test.crt)

            # SSLProtocol         ALL -SSLv2 -SSLv3 -TLSv1.0
            # SSLCipherSuite      TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
            # InactivityTimeout   1min
        </ProxyConfig>

        ProxyLog proxy-debug-error.log level=3 formatter=pretty anew
        ProxyTrace debug=1 error=1 request=2 result=2 headers=3 context=4 packet=5 detail=6 content=10K
    </Route>

    #
    #   For unit tests
    #
    <Route ^/proxy/(.*)$>
        Reset pipeline
        SetHandler proxyHandler
        Prefix /proxy
        Methods add DELETE PATCH PUT OPTIONS
        InactivityTimeout 20secs

        ProxyConnect 127.0.0.1:9999 launch="${BIN_DIR}/appweb --config proxy.conf" multiplex=unlimited timeout=1min
        # ProxyConnect 127.0.0.1:9999 multiplex=unlimited timeout=1min

        ProxyLog proxy.log level=3 formatter=pretty anew
        ProxyTrace debug=1 error=1 request=2 result=2 headers=3 context=4 packet=5 detail=6 content=10K
    </Route>
</if>

#
#   Test route pattern matching
#   The {2} means match exactly 2 of the previous character
<Route ^/route/(user|admin)/{cmd}/[^a-z]\{2}(\.[hH][tT][mM][lL])$>
    Target write 200 "${cmd}"
</Route>

<Route ^/route/tokens/{cmd}$>
    Target write 200 "${cmd}-${request:query}"
</Route>

<Route ^/route/optional/{controller}(~/{action}~) >
    Target write 200 "${controller}/${action}"
</Route>

<if FAST_MODULE>
    <Route ^/route/missing-ext/((?!\.php).*)$>
        Prefix /route/missing-ext
        SetHandler fastHandler
        FastConnect 127.0.0.1 launch
        Condition exists ${request:filename}
        Target run $1.php
    </Route>
#    <Route ^/php/upload>
#        # Disable the appweb uploadFilter for php uploads
#        StreamInput multipart/form-data /php/upload
#    </Route>
</if>

#
#   Authentication details
#
Role executive manage direct
Role user view
Role administrator view

User ralph BF1:00128:bWFG5x85BYfuf7GW:w+zzIU0WTZQYaNAe0sPecWyry8Z9GrKH user administrator purchase
User mary 5b90553bea8ba3686f4239d62801f0f3 user executive
User peter 7cdba57892649fd95a540683fdf8fba6 user
User joshua 2fd6e47ff9bb70c0465fd2f5c8e5305e user administrator purchase
User julie 9d8873a123eb506e7f8e84d1f2a26916 user

<Route ^/route/auth>
    Prefix /route/auth
    Documents "${DOCUMENTS}/auth/basic"
    AuthType basic example.com
</Route>

#
#   Language tests
#
<Route ^/lang/root>
    Prefix /lang/root
    AddLanguageDir en english
</Route>

<Route ^/lang/suffix>
    Prefix /lang/suffix
    AddLanguageSuffix en en before
</Route>

<Route ^/lang/target/(.*)(\.html)$>
    Prefix /lang/target
    AddLanguageSuffix en en
    Target run $1.${request:Language=ge}$2
</Route>

<Route ^/lang/default/(.*)(\.html)$>
    Prefix /lang/default
    AddLanguageSuffix fr fr
    DefaultLanguage fr
    Target run $1.${request:Language}$2
</Route>

<Route ^/lang/catchall>
    Prefix /lang/catchall
    AddLanguageSuffix "" en before
</Route>

#
#   Header and Param tests
#
<Route ^/route/header>
    RequestHeader User-Agent custom
    Target write 200 "${header:User-Agent}"
</Route>

<Route ^/route/param>
    Param name peter
    Target write 200 "${param:name}"
</Route>

#
#   Condition tests
#
<Route ^/route/cond>
    Condition ! match ${request:scheme} "(https|custom)"
    Target write 200 "${request:scheme}"
</Route>

#
#   Updates
#
<Route ^/route/update/cmd>
    Update cmd "touch route-update-cmd.tmp"
    Target write 200 "${request:error}UPDATED"
</Route>

<Route ^/route/update/var>
    Update param from ${header:from}
    Target write 200 "${param:from}"
</Route>

#
#   Misc
#
<Route ^/compress/>
    Map compressed
</Route>

#
#   Test handler
#
#<Route ^/test>
#    Prefix /test
#    AddFilter           uploadFilter
#    UploadDir           tmp
#    UploadAutoDelete    on
#    SetHandler test
#</Route>

#
#   Enable PUT|DELETE
#
<Route ^/tmp/>
    Documents web/tmp
    Prefix /tmp
    Methods add DELETE PUT OPTIONS
    SetHandler fileHandler
</Route>

#
#   Enable TRACE and options
#
<Route ^/trace/>
    Prefix /trace
    Methods add OPTIONS, TRACE
</Route>

#
#   Stealth mode
#
<Route ^/liberal/>
    Prefix /liberal
    Stealth off
    SessionCookie visible=true
    Header remove Content-Security-Policy
    Header remove X-Frame-Options
    Header remove X-XSS-Protection
    Header remove X-Content-Type-Options
</Route>

#
#   Sample to restrict to specific named methods
#
<Route ^/get>
   Prefix /get
   Methods set GET, OPTIONS
</Route>

#
#   Test caching modes: all, unique, only
#
<Route ^/only/>
    Prefix /only
    Documents web/caching
    # Cache only these exact URIs with request params
    Cache client=30mins server=1day /cache.esp?esp=1&prefix=/only
</Route>
<Route ^/combined/>
    Prefix /combined
    Documents web/caching
    # Cache these URIs with any request params combined into one item per URI
    Cache server=1day /cache.esp
</Route>
<Route ^/unique/>
    Prefix /unique
    Documents web/caching
    # Cache each URI+params uniquely
    Cache server=1day unique /cache.esp
</Route>
<Route ^/ext/>
    Prefix /ext
    Documents web/caching
    Cache server extensions="esp"
</Route>
<Route ^/types/>
    Prefix /types
    Documents web/caching
    Cache server types="application/x-php"
</Route>
<Route ^/methods/>
    Prefix /methods
    Documents web/caching
    Cache server methods="POST"
</Route>

<Route ^/big/>
    Prefix /big
</Route>

<Route /streaming>
    Prefix /streaming
    Methods add DELETE PATCH PUT OPTIONS
    StreamInput * /
</Route>
#
#   Aliases and CGI
#
Alias /SimpleAlias "${DOCUMENTS}"
Alias /aliasDir/ ${DOCUMENTS}/alias/
Alias /aliasFile ${DOCUMENTS}/alias/atest.html
Alias /AliasDocs/ "${DOCUMENTS}/My Documents/"

<if CGI_MODULE>
    ScriptAlias /MyScripts/ "${HOME}/cgi-bin/"
    ScriptAlias /YourScripts/ "${DOCUMENTS}/"
</if>

#
#   Routes with basic, digest and form-based  authentication
#
<Route ^/auth/basic/>
    AuthType basic example.com
    <Route ^/auth/basic/executive/>
        Require role executive
    </Route>
    <Route ^/auth/basic/joshua/>
        Require user joshua
        # ErrorDocument 403 /notFound.esp
    </Route>
</Route>
<Route ^/auth/blowfish/>
    AuthType basic example.com
    Require user ralph
</Route>
<Route ^/auth/digest/>
    AuthType digest example.com
    <Route ^/auth/digest/executive/>
        Require role executive
    </Route>
    <Route ^/auth/digest/joshua/>
        Require user joshua
    </Route>
</Route>

<Route ^/auth/form/>
    SessionTimeout 1mins
    # SessionCookie name="meomy" persist=false visible=true same=lax
    AuthType form example.com https:///auth/form/login.esp https:///auth/form/login /auth/form/logout http:///auth/form/index.html
</Route>

#
#   Test error documents
#
<Route ^/error/>
    # Remote URIs will redirect with a 302 status code
    ErrorDocument 404 /notFound.esp
</Route>

#
#   Test simple redirections
#
Redirect temp ^/old.html /index.html
Redirect 410 ^/membersOnly

Defense deny REMEDY=ban STATUS=406 MESSAGE="Client temporarily banned due to monitored limit exceeded" PERIOD=5secs
Monitor "NotFoundErrors > 190" 5sec deny

<Route ^/secure-only>
    Prefix /secure-only
    # Set Strict-Transport-Security max-age and whether subDomains should be included
    Require secure age=30days domains
</Route>

<Route ^/dirlist/>
    Prefix /dirlist
</Route>

<if SSL_MODULE>
    #
    #   Define the TLS endpoint without requiring a virtual host
    #
    ListenSecure :4443       # <HTTPSv4>
    # ListenSecure :443

    SSLCACertificateFile    "../certs/ca.crt" # For client-cert verification (signed test.crt)

    #
    #   Load a test certificate signed by ca.crt
    #
    SSLCertificateFile      "../certs/test.crt"
    SSLCertificateKeyFile   "../certs/test.key"

    #
    #   TLS 1.3 preferred ciphers
    #
    # SSLCipherSuite          TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256

    #
    #   TLS 1.2 preferred ciphers
    # SSLCipherSuite        ":ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4:!SSLv3"

    #
    # Protocol selection only works with OpenSSL
    #
    # SSLProtocol   ALL -SSLv2 -SSLv3 -TLSv1.0
    # SSLProtocol   +TLSv1.3 +TLSv1.1 +TLSv1.2 -TLSv1.0
    # SSLProtocol   +TLSv1.3

    SSLPreload

    #
    #   Virtual hosts for SSL certificate tests
    #
    <VirtualHost *:5443 *:5444 *:5445>
        #
        #   Test multiple endpoints for a virtual host
        #   When listen is nested, it is not visible for the default host
        #
        ListenSecure 127.0.0.1:5443     # <SELFCERT>
        ListenSecure 127.0.0.1:5444     # Unused
        ListenSecure 127.0.0.1:5445     # Unused
        ServerName 127.0.0.1
        SSLCertificateFile    "../certs/self.crt"
        SSLCertificateKeyFile "../certs/self.key"
    </VirtualHost>

    #
    #   For testing SNI
    #
    <VirtualHost *:5443>
        ServerName localhost
        SSLCertificateFile    "../certs/test.crt"
        SSLCertificateKeyFile "../certs/test.key"
    </VirtualHost>

    <VirtualHost *:6443>
        ListenSecure 127.0.0.1:6443     # <CLIENTCERT>
        SSLVerifyClient on
        <Route /ssl-match>
            Prefix /ssl-match
            Condition match ${ssl:CLIENT_S_CN} "localhost|example.com"
        </Route>
        # Condition match ${ssl:state} "CN=localhost,"
    </VirtualHost>

    <VirtualHost *:7443>
        ListenSecure 127.0.0.1:7443     # <TESTCERT>
        SSLVerifyClient on
    </VirtualHost>
</if>

<VirtualHost *:4200>
    Listen 127.0.0.1:4200               # <NAMED>
    ServerName  localhost:4200
    Documents   "${HOME}/web/vhost/namehost1"
</VirtualHost>

<VirtualHost *:4200>
    ServerName  /embedthis/
    CanonicalName localhost:4200
    Documents   web
</VirtualHost>

<VirtualHost *:4200>
    ServerName 127.0.0.1:4200
    Documents "${HOME}/web/vhost/namehost2"
    Reset pipeline
    AddHandler fileHandler html gif jpeg jpg png pdf ico css js ""
</VirtualHost>

#
#   IP virtual host
#
<VirtualHost *:4300>
    Listen 127.0.0.1:4300             # <IPHOST>
    Documents "${HOME}/web/vhost/iphost"
    AuthType basic example.com
    Require user mary
</VirtualHost>

#
#   Virtual host for CrossOrigin
#
<VirtualHost *:4400>
    Listen 127.0.0.1:4400
    Documents web
</VirtualHost>

# Header Set Set-Cookie hhh=123412341234123412341234ZZqVjXgwVIb4VK0okC5jSwZwnjpcUQ; Path=/;
# Header Remove Vary
# Header Remove X-Frame-Options
# Header Remove X-Content-Type-Options
# Header Remove X-XSS-Protection
# Header Remove Accept-Ranges

# TypesConfig "mime.types"
